plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
    }
    maven { url 'https://jitpack.io' }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    implementation ("net.dv8tion:JDA:5.0.0-alpha.15") {
        exclude module: 'opus-java'
    }
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.2.2'
    implementation 'com.github.CovarianceMomentum:codeforces-api:cc68c0543c'
    implementation 'com.github.softawii:curupira:v0.2.9'
    implementation 'org.apache.logging.log4j:log4j-api:2.18.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.18.0'
}

test {
    useJUnitPlatform()
}

application {
    // Defina explicitamente a classe principal da aplicação
    mainClass.set("com.jaypos.maratonouBot.Main")
}

tasks.shadowJar {
    archiveBaseName.set("MaratonouBot") // Nome base do arquivo
    archiveVersion.set("1.0.0")         // Versão
    archiveClassifier.set("")           // Remove "-all" do nome final
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE // Resolve conflitos de arquivos duplicados

    // Configuração do manifest
    doFirst {
        manifest {
            attributes(
                    "Main-Class": application.mainClass.get(), // Pegue o valor definido no plugin application
                    "Multi-Release": true
            )
        }
    }
}

// Tarefa extra de deploy (opcional)
tasks.register('deploy') {
    doLast {
        println 'Deploy executado com sucesso!'
    }
}
